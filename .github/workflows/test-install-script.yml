name: Test install script

on:
  push:
    paths:
      - ".github/workflows/test-install-script.yml"
      - "other/installation-script/install.sh"
  pull_request:
    paths:
      - ".github/workflows/test-install-script.yml"
      - "other/installation-script/install.sh"
  schedule:
    # Run every day at 03:00 UTC to catch breakage caused by external events
    - cron: "0 3 * * *"
  # workflow_dispatch event allows the workflow to be triggered manually.
  # See: https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch
  workflow_dispatch:

env:
  SCRIPT_NAME: install.sh
  SCRIPT_ARTIFACT_NAME: script
  TOOL_NAME: arduino-lint # The executable's file name

jobs:
  configure:
    runs-on: ubuntu-latest

    env:
      PROJECT_OWNER_PLACEHOLDER: arduino # Placeholder value of the PROJECT_OWNER variable in the template script
      PROJECT_OWNER: arduino # Replacement value used for the tests
      PROJECT_NAME_PLACEHOLDER: TODO # Placeholder value of the PROJECT_NAME variable in the template script
      PROJECT_NAME: arduino-lint # Replacement value used for the tests
      SCRIPT_FOLDER: other/installation-script

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure script for testing
        run: |
          sed \
            --in-place \
            's/PROJECT_OWNER="${{ env.PROJECT_OWNER_PLACEHOLDER }}"/PROJECT_OWNER="${{ env.PROJECT_OWNER }}"/' \
            "${{ env.SCRIPT_FOLDER }}/${{ env.SCRIPT_NAME }}"
          sed \
            --in-place \
            's/PROJECT_NAME="${{ env.PROJECT_NAME_PLACEHOLDER }}"/PROJECT_NAME="${{ env.PROJECT_NAME }}"/' \
            "${{ env.SCRIPT_FOLDER }}/${{ env.SCRIPT_NAME }}"

      - name: Save configured script as workflow artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          path: ${{ env.SCRIPT_FOLDER }}/${{ env.SCRIPT_NAME }}
          name: ${{ env.SCRIPT_ARTIFACT_NAME }}

  default:
    needs: configure
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Download script artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.SCRIPT_ARTIFACT_NAME }}

      - name: Make script executable
        run: chmod u+x "${{ github.workspace }}/${{ env.SCRIPT_NAME }}"

      - name: Run script with defaults
        shell: sh
        run: |
          "${{ github.workspace }}/${{ env.SCRIPT_NAME }}"

      - name: Verify installation
        shell: bash
        run: |
          "${PWD}/bin/${{ env.TOOL_NAME }}" --version

  bindir:
    needs: configure
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set install path environment variable
        shell: bash
        run: |
          # See: https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
          echo "BINDIR=${{ runner.temp }}/custom-installation-folder" >> "$GITHUB_ENV"

      - name: Download script artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.SCRIPT_ARTIFACT_NAME }}

      - name: Make script executable
        run: chmod u+x "${{ github.workspace }}/${{ env.SCRIPT_NAME }}"

      - name: Run script with custom install location
        shell: sh
        run: |
          mkdir -p "${{ env.BINDIR }}"
          "${{ github.workspace }}/${{ env.SCRIPT_NAME }}"

      - name: Verify installation
        shell: bash
        run: |
          "${{ env.BINDIR }}/${{ env.TOOL_NAME }}" --version

  version:
    needs: configure
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    runs-on: ${{ matrix.os }}

    env:
      VERSION: "1.0.0"

    steps:
      - name: Download script artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.SCRIPT_ARTIFACT_NAME }}

      - name: Make script executable
        run: chmod u+x "${{ github.workspace }}/${{ env.SCRIPT_NAME }}"

      - name: Run script with version argument
        shell: sh
        run: |
          "${{ github.workspace }}/${{ env.SCRIPT_NAME }}" "${{ env.VERSION }}"

      - name: Verify installation
        shell: bash
        run: |
          "${PWD}/bin/${{ env.TOOL_NAME }}" --version | grep --fixed-strings "${{ env.VERSION }}"

  nightly:
    needs: configure
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Download script artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.SCRIPT_ARTIFACT_NAME }}

      - name: Make script executable
        run: chmod u+x "${{ github.workspace }}/${{ env.SCRIPT_NAME }}"

      - name: Run script with nightly build version argument
        shell: sh
        run: |
          "${{ github.workspace }}/${{ env.SCRIPT_NAME }}" "nightly-latest"

      - name: Verify installation
        shell: bash
        run: |
          "${PWD}/bin/${{ env.TOOL_NAME }}" --version | grep "^nightly-"
